import Levenshtein

# List of values
values = ['aku', 'nomor rekening', '2000222', 'account number', '20009']

# Keywords to match
keywords = ['no rekening', 'account no']

def find_closest_matches(values, keywords):
    matched_values = []
    
    for keyword in keywords:
        # Normalize keyword
        normalized_keyword = keyword.lower()
        
        # Find the closest matching phrase in the list
        closest_match = None
        min_distance = float('inf')
        
        for value in values:
            normalized_value = value.lower()
            distance = Levenshtein.distance(normalized_value, normalized_keyword)
            if distance < min_distance:
                min_distance = distance
                closest_match = value
        
        # If a closest match is found, find the numeric value near it
        if closest_match:
            closest_index = values.index(closest_match)
            if closest_index + 1 < len(values) and values[closest_index + 1].isnumeric():
                matched_values.append(values[closest_index + 1])
    
    return matched_values

# Find and print the matched values
matched_values = find_closest_matches(values, keywords)
print(matched_values)
